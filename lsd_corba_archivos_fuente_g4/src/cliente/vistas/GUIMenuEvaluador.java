/**
 * Presentado por: Jefferson Eduardo Campo Y Danny Alberto Diaz Mage
 */
package cliente.vistas;

import java.awt.HeadlessException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sop_corba.GestionAnteproyectosIntOperations;
import sop_corba.GestionSeguimientoIntOperations;
import sop_corba.GestionUsuariosIntOperations;
import sop_corba.clsFormatoBDTO;

public class GUIMenuEvaluador extends javax.swing.JFrame {
    //atributos
    private static GestionAnteproyectosIntOperations objRemotoAnteproyectos;
    private static GestionSeguimientoIntOperations objRemotoSeguimiento;
    private static GestionUsuariosIntOperations objRemotoUsuarios;
    private int idEvaluador;
    
    /**
     * Constructor Parametrizado
     * @param refGestion
     * @param refSeguimiento
     * @param refUsuarios
     * @param idEvaluador identificación del evaluador
     */
    public GUIMenuEvaluador(GestionAnteproyectosIntOperations refGestion, GestionSeguimientoIntOperations refSeguimiento, GestionUsuariosIntOperations refUsuarios, int idEvaluador) {
        initComponents();
        GUIMenuEvaluador.objRemotoUsuarios = refUsuarios;
        GUIMenuEvaluador.objRemotoAnteproyectos = refGestion;
        GUIMenuEvaluador.objRemotoSeguimiento = refSeguimiento;
        this.idEvaluador = idEvaluador;
        String fecha = fechaActual();
        jlbFechaActual.setText(fecha);
        listarAnt();
        ListarCmbAnteproyectos();
    }

    /**
     * Constructor vacio.
     */
    public GUIMenuEvaluador() {
    }

    /**
     * Método que proporciona la fecha actual en el sistema.
     * @return fecha actual.
     */
    public String fechaActual() {
        Date date = new Date();
        LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        String anio = Integer.toString(localDate.getYear());
        int mes = localDate.getMonthValue();
        int dia = localDate.getDayOfMonth();
        String fecha = dia + "/" + mes + "/" + anio;
        return fecha;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jlbBsalir = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaAsignados = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcmbConcepto = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtFObservaciones = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jcmbAsignados = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        jlbFechaActual = new javax.swing.JLabel();
        jlbImgRegistrarB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu del Evaluador");
        setResizable(false);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 26)); // NOI18N
        jLabel1.setText("Registrar Formato B");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 0, -1, -1));
        jLabel1.getAccessibleContext().setAccessibleName("jbltitulo1");

        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 574, -1, -1));

        jlbBsalir.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jlbBsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/CerrarSesion.png"))); // NOI18N
        jlbBsalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbBsalirMouseClicked(evt);
            }
        });
        jPanel2.add(jlbBsalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 520, -1, -1));

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 20)); // NOI18N
        jLabel12.setText("Registro");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 211, -1, -1));
        jLabel12.getAccessibleContext().setAccessibleName("jlbtitulo3");

        tablaAsignados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Codigo Anteproyecto"
            }
        ));
        jScrollPane3.setViewportView(tablaAsignados);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 66, 426, 112));

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 20)); // NOI18N
        jLabel4.setText("Lista de proyectos");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 36, -1, -1));
        jLabel4.getAccessibleContext().setAccessibleName("jlbtitulo2");

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 15)); // NOI18N
        jLabel2.setText("Codigo anteproyecto ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 248, -1, -1));
        jLabel2.getAccessibleContext().setAccessibleName("jlbtitulo4");

        jLabel5.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 15)); // NOI18N
        jLabel5.setText("Concepto");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 289, -1, -1));
        jLabel5.getAccessibleContext().setAccessibleName("jlbtitulo5");

        jcmbConcepto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcmbConcepto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aprobado", "No Aprobado" }));
        jPanel2.add(jcmbConcepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, 243, -1));

        jtxtFObservaciones.setColumns(20);
        jtxtFObservaciones.setRows(5);
        jScrollPane2.setViewportView(jtxtFObservaciones);
        jtxtFObservaciones.getAccessibleContext().setAccessibleName("jtxtFConcepto");

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 243, -1));

        jLabel6.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 15)); // NOI18N
        jLabel6.setText("Observaciones");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 367, -1, -1));
        jLabel6.getAccessibleContext().setAccessibleName("jlbObservaciones");

        jcmbAsignados.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel2.add(jcmbAsignados, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 240, 20));

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 15)); // NOI18N
        jLabel7.setText("Fecha de evaluacion");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 438, -1, 30));

        btnRegistrar.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 15)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jPanel2.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 493, -1, -1));

        jlbFechaActual.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 16)); // NOI18N
        jlbFechaActual.setText("--");
        jPanel2.add(jlbFechaActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 443, -1, -1));

        jlbImgRegistrarB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/registrarB.png"))); // NOI18N
        jPanel2.add(jlbImgRegistrarB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 580));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Registrar Formato B", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que ajusta los parametros predeterminados del formulario.
     */
    public void limpiar() {
        jcmbAsignados.removeAllItems();
        jcmbConcepto.setSelectedItem("Aprobado");
        jtxtFObservaciones.setText("");
    }

    /**
     * Método que obtiene y lista los anteproyectos en un combo box.
     */
    public void ListarCmbAnteproyectos() {
        try {
            clsFormatoBDTO[] asignadosArray = objRemotoAnteproyectos.listaAteproyectosAsignados(idEvaluador);
            ArrayList<clsFormatoBDTO> asignados = new ArrayList(Arrays.asList(asignadosArray));
            for (int i = 0; i < asignados.size(); i++) {
                String codAnte = String.valueOf(asignados.get(i).codAnteproyecto);
                jcmbAsignados.addItem(codAnte);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "La operacion no se pudo completar, intente nuevamente..." + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Método que lista los anteproyectos asignados al evaluador.
     */
    public void listarAnt() {
        try {
            clsFormatoBDTO[] asignadosArray = objRemotoAnteproyectos.listaAteproyectosAsignados(idEvaluador);
            ArrayList<clsFormatoBDTO> asignados = new ArrayList(Arrays.asList(asignadosArray));
            DefaultTableModel modelo = new DefaultTableModel();
            if (asignados.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No tiene anteproyectos asignados", "Advertencia", JOptionPane.WARNING_MESSAGE);
                modelo.addColumn("Codigo Anteproyecto");
                Object[] obj = new Object[]{""};
                modelo.addRow(obj);
                tablaAsignados.setModel(modelo);
            } else {
                modelo.addColumn("Codigo Anteproyecto");
                tablaAsignados.setEnabled(false);
                for (int i = 0; i < asignados.size(); i++) {
                    clsFormatoBDTO formato = asignados.get(i);
                    Object[] obj = new Object[]{formato.codAnteproyecto};
                    modelo.addRow(obj);
                }
                tablaAsignados.setModel(modelo);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "La operacion no se pudo completar, intente nuevamente..." + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Método que captura el evento del mouse o ratón al efectuar un click en el botón salir.
     * @param evt evento.
     */
    private void jlbBsalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbBsalirMouseClicked
        GUIInicioSesion ini = new GUIInicioSesion(objRemotoAnteproyectos, objRemotoSeguimiento,objRemotoUsuarios);
        ini.setVisible(true);
        ini.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jlbBsalirMouseClicked

    /**
     * Método que captura el evento del botón registrar al efectuar un click.
     * @param evt evento.
     */
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        try {
            if (jcmbAsignados.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "El campo codigo es obligatorio","Advertencia",JOptionPane.WARNING_MESSAGE);
            } else {
                int codigo = Integer.parseInt(jcmbAsignados.getSelectedItem().toString());
                String concepto = (String) jcmbConcepto.getSelectedItem();
                String observaciones = jtxtFObservaciones.getText();
                String fecha = jlbFechaActual.getText();
                int flujo = objRemotoAnteproyectos.VerificarAnteproyecto(codigo);
                boolean asignacion = objRemotoAnteproyectos.verificarAsignacion(codigo, idEvaluador);
                if (flujo == 0) {
                    JOptionPane.showMessageDialog(null, "Anteproyecto ingresado no encontrado", "Error en la busqueda", JOptionPane.ERROR_MESSAGE);
                } else {
                    if (flujo >= 3) {
                        JOptionPane.showMessageDialog(null, "El anteproyecto ingresado ya fue evaluado", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    } else if (asignacion == false) {
                        JOptionPane.showMessageDialog(null, "El anteproyecto ingresado no se le ha asignado", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    } else {
                        clsFormatoBDTO formatoB = new clsFormatoBDTO(codigo, concepto, observaciones, fecha, idEvaluador);
                        int evaluado = objRemotoAnteproyectos.ModificarFormatoB(formatoB);
                        if (evaluado == 1) {
                            JOptionPane.showMessageDialog(null, "Anteproyecto registrado exitosamente en el formato B");
                            String labeFecha = fechaActual();
                            jlbFechaActual.setText(labeFecha);
                            limpiar();
                            listarAnt();
                            ListarCmbAnteproyectos();
                        } else if (evaluado == -1) {
                            JOptionPane.showMessageDialog(null, "Error: Usted ya evaluo este anteproyecto", "Error en la evaluacion", JOptionPane.ERROR_MESSAGE);
                        } else if(evaluado == 2){
                            JOptionPane.showMessageDialog(null, "Anteproyecto actualizado exitosamente en el formato B");
                            limpiar();
                            listarAnt();
                            ListarCmbAnteproyectos();
                        }
                    }
                }
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La operacion no se pudo completar, intente nuevamente..." + e.getMessage(), "Error en la busqueda", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIMenuEvaluador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIMenuEvaluador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIMenuEvaluador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIMenuEvaluador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIMenuEvaluador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcmbAsignados;
    private javax.swing.JComboBox<String> jcmbConcepto;
    private javax.swing.JLabel jlbBsalir;
    private javax.swing.JLabel jlbFechaActual;
    private javax.swing.JLabel jlbImgRegistrarB;
    private javax.swing.JTextArea jtxtFObservaciones;
    private javax.swing.JTable tablaAsignados;
    // End of variables declaration//GEN-END:variables
}
